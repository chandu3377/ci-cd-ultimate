pipeline {
  agent {
    kubernetes {
      yaml """
      apiVersion: v1
      kind: Pod
      spec:
        containers:
        - name: maven
          image: quay.io/chandu3377/maven-chandu-docker-agent:v1
          command:
          - cat
          tty: true
        - name: buildah
          image: quay.io/buildah/stable:latest
          securityContext:
            privileged: true
          command:
          - cat
          tty: true
      """
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        // git branch: 'main', url: 'https://github.com/chandu3377/ci-cd-ultimate.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // Build the project and create a JAR file
        sh 'cd java-maven-argocd-kube/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "https://sonarqube.apps.racs-prod.racsmaurice.com/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-argocd-kube/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "quay.io/chandu3377/maven-chandu-docker-agent:${BUILD_NUMBER}"
      }
      steps {
        script {
          sh '''
              cd java-maven-argocd-kube/spring-boot-app
              buildah build -t ${DOCKER_IMAGE} .
              buildah login -u $(oc whoami) -p $(oc whoami -t) quay.io
              buildah push ${DOCKER_IMAGE}
          '''
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "ci-cd-ultimate"
        GIT_USER_NAME = "chandu3377"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
              git config user.email "chanduprakash3377@gmail.com"
              git config user.name "chandu"
              BUILD_NUMBER=${BUILD_NUMBER}
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-argocd-kube/spring-boot-app-manifests/deployment.yml
              git add java-maven-argocd-kube/spring-boot-app-manifests/deployment.yml
              git commit -m "Update deployment image to version ${BUILD_NUMBER}"
              git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
